# Copyright 2018 New Vector Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
type: object
title: Persistent Data Unit
description: A persistent data unit (event)
example:
  $ref: "../examples/pdu.json"
properties:
  room_id:
    type: string
    description: Room identifier
    example: "!abc123:matrix.org"
  sender:
    type: string
    description: The ID of the user sending the event
    example: "@someone:matrix.org"
  origin:
    type: string
    description: The ``server_name`` of the homeserver that created this event
    example: "matrix.org"    
  origin_server_ts:
    type: integer
    format: int64
    description: Timestamp in milliseconds on origin homeserver when this event was created.
    example: 1234567890
  type:
    type: string
    description: Event type
    required: true
    example: "m.room.message"
  state_key:
    type: string
    description: |-
      If this key is present, the event is a state event, and it will replace previous events
      with the same ``type`` and ``state_key`` in the room state.
    example: "my_key"
  content:
    type: object
    description: The content of the event
  prev_events:
    type: array
    description: |-
      Event IDs and hashes of the most recent events in the room that the homeserver was aware
      of when it made this event
    items:
      type: array
      maxItems: 2
      minItems: 2
      items:
        - type: string
          title: Event ID
          example: "$abc123:matrix.org"
        - type: object
          title: Event Hash
          example: {
            "sha256": "abase64encodedsha256hashshouldbe43byteslong"
          }
          properties:
            sha256:
              type: string
              description: The event hash
              example: abase64encodedsha256hashshouldbe43byteslong
          required: ['sha256']
  depth:
    type: integer
    description: The maximum depth of the ``prev_events``, plus one
    example: 12
  auth_events:
    type: array
    description: Event IDs and hashes for the "auth events" of this event
    items:
      type: array
      maxItems: 2
      minItems: 2
      items:
        - type: string
          title: Event ID
          example: "$abc123:matrix.org"
        - type: object
          title: Event Hash
          example: {
            "sha256": "abase64encodedsha256hashshouldbe43byteslong"
          }
          properties:
            sha256:
              type: string
              description: The event hash
              example: abase64encodedsha256hashshouldbe43byteslong
          required: ['sha256']
  hashes:
    type: object
    title: Event Hash
    description: Hashes of the PDU, following the algorithm specified in `Signing Events`_
    example: {
      "sha256": "thishashcoversallfieldsincasethisisredacted"
    }
    properties:
      sha256:
        type: string
        description: The hash
        example: thishashcoversallfieldsincasethisisredacted
    required: ['sha256']
  signatures:
    type: object
    description: |-
      Signatures of the redacted PDU, following the algorithm specified in `Signing Events`_
    example: {
      "example.com": {
        "ed25519:key_version:": "these86bytesofbase64signaturecoveressentialfieldsincludinghashessocancheckredactedpdus"
      }
    }
    additionalProperties:
      type: object
      title: Server Signatures
      additionalProperties:
        type: string
  redacts:
    type: string
    description: For redaction events, the ID of the event being redacted
    example: "$def456:matrix.org"
  unsigned:
    type: object
    description: Additional data added by the origin server but not covered by the ``signatures``
required:
  - room_id
  - sender
  - origin
  - origin_server_ts
  - type
  - content
  - prev_events
  - depth
  - auth_events
  - hashes
  - signatures
